}
print(tail(women, n = 10))
plot(iris$Sepal.Width[50:100, ], iris$Petal.Length[50:100, ])
plot(iris$Sepal.Width[c(50:100), ], iris$Petal.Length[c(50:100), ])
plot(c(iris$Sepal.Width[c(50:100), ], iris$Petal.Length[c(50:100), ])
plot(c(iris$Sepal.Width[c(50:100), ], iris$Petal.Length[c(50:100), ]))
novairis = iris(50:100, c(2, 3))
novairis = iris[50:100, c(2, 3)]
plot(novairis)
vetor_soma = c()
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
append(vetor_soma, vetor_1[i]+vetor_2[i])
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(i)
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
append(vetor_soma, vetor_1[i], after = length(vetor_soma))
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_1[i]
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_1[i]
}
vetor_1[2]
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i])
}
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
append(vetor_soma, 1, after = length(vetor_soma))
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
append(vetor_soma, 1, after = length(vetor_soma))
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
vetor_soma
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
vetor_soma = append(vetor_soma, 1, after = length(vetor_soma))
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_soma = append(vetor_soma, vetor_1[i]+vetor_2[i], after = length(vetor_soma))
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_soma = append(vetor_soma, vetor_1[i]+vetor_2[i], after = length(vetor_soma))
}
vetor_soma
#ou
vetor_soma = vetor_1 + vetor_2
co2
nrow(CO2)
ncol(CO2)
rownames(CO2)
colnames(CO2)
nrow(CO2)
ncol(CO2)
rownames(CO2)
colnames(CO2)
plot(x)
x = [1, 2, 3, 4]
plot(x)
x = c(1, 2, 3, 4)
plot(x)
lines(x)
array = c()
array = c()
for (i in c(1:10)) {
x = sample(1:6, i, replace = TRUE)
y = mean(x)
array <- append(array, y)
}
array
lines(array)
lines(array, y = c(1:length(array)))
lines(array, y = c(1:length(array)))
lines(array, y = c(1:length(array)))
lines(array, c(1:length(array)))
lines(c(1:length(array)), array)
lines(c(1:length(array)), array)
lines(array)
lines(array)
lines(array, c(1:length(array)))
for (i in c(1:10)) {
x = sample(1:6, i, replace = TRUE)
y = mean(x)
index <- append(index, i)
array <- append(array, y)
}
index = c()
for (i in c(1:10)) {
x = sample(1:6, i, replace = TRUE)
y = mean(x)
index <- append(index, i)
array <- append(array, y)
}
plot(index, array)
array = c()
index = c()
for (i in c(1:10)) {
x = sample(1:6, i, replace = TRUE)
y = mean(x)
index <- append(index, i)
array <- append(array, y)
}
plot(index, array)
lines(index, array)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
array = c()
index = c()
n = 10
for (i in c(1:n)) {
x = sample(1:6, i, replace = TRUE)
y = mean(x)
index <- append(index, i)
array <- append(array, y)
}
graf = lines(index, array)
plot.new()
graf = lines(index, array)
graf
plot.new()
lines(index, array)
plot.new(lines(index, array))
source('~/.active-rstudio-document', echo=TRUE)
plot(index, array)
plot(index, array, l)
plot(index, array, type = "l")
array = c()
index = c()
n = 10
for (i in c(1:n)) {
x = sample(1:6, i, replace = TRUE)
y = mean(x)
index <- append(index, i)
array <- append(array, y)
}
plot(index, array, type = "l")
array = c()
index = c()
n = 50
for (i in c(1:n)) {
x = sample(1:6, i, replace = TRUE)
y = mean(x)
index <- append(index, i)
array <- append(array, y)
}
plot(index, array, type = "l")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
y
source('~/.active-rstudio-document', echo=TRUE)
plot(y)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
teste = c("cara", "coroa", "cara")
barplot(teste)
plot(teste)
plot(teste)
barplot(table(teste))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
barplot(table(array), ylim = c(0, 20))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
soma = c()
source('~/.active-rstudio-document', echo=TRUE)
n = 10
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(3.5, type = "l")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
plot()
plot(NULL)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
plot(NULL)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
plot(NULL)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
set.seed(123)
x = rnorm(1000)
# Rodar com ctrl + shift + enter
qqnorm(x)
# linha
qqline(x)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
library(semTools)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
# Valor de p acima de 0.05, não há indício para a não confirmar a hipótese nula de dados normalmente distribuídos
shapiro.test(x)
# Rodar com ctrl + shift + enter
hist(x, main = "")
par(new = TRUE)
plot(density(x), ylab = "", xlab = "", axes = F, lwd = 2.5)
# Rodar com ctrl + shift + enter
library(semTools)
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
qqnorm(m)
qqline(m)
lst = rep(0, 500)
lst = rep(0, 500)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
hist(m)
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
hist(m)
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
hist(m)
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
hist(m)
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
hist(m)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# Executar com ctrl + shift + enter
split.screen(figs = c(2, 2))
screen(1)
plot(trees$Girth, trees$Volume)
screen(2)
plot(trees$Girth, trees$Height)
screen(3)
plot(trees$Height, trees$Volume)
screen(4)
hist(trees$Volume)
close.screen(all = TRUE)
# Executar com ctrl + shift + enter
split.screen(figs = c(2, 2))
screen(1)
plot(trees$Girth, trees$Volume)
screen(2)
plot(trees$Girth, trees$Height)
screen(3)
plot(trees$Height, trees$Volume)
screen(4)
hist(trees$Volume)
close.screen(all = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
Sys.sleep(0.05)
n = 500
lst = c()
for (i in 1:n) {
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
lst = append(lst, mean(m))
split.screen(figs = c(1, 2))
screen(1)
hist(m, main = "Amostra M")
legend("topright", legend = paste("Média = ", toString(mean(m))))
screen(2)
hist(lst, main = "Distribuição Normal")
close.screen(all = TRUE)
Sys.sleep(0.05)
}
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
hist(lst, main = "Distribuição Normal")
par(new = T)
plot(density(lst))
hist(lst, main = "Distribuição Normal")
par(new = T)
plot(density(lst), main = "", xlab = "", ylab = "")
hist(lst, main = "Distribuição Normal")
par(new = T)
plot(density(lst), main = "", xlab = "", ylab = "", axes = F)
n = 500
lst = c()
for (i in 1:n) {
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2), skewness = c(5, 2), kurtosis = c(3, 3))
lst = append(lst, mean(m))
split.screen(figs = c(1, 2))
screen(1)
hist(m, main = "Amostra M")
legend("topright", legend = paste("Média = ", toString(mean(m))))
screen(2)
hist(lst, main = "Distribuição Normal")
close.screen(all = TRUE)
Sys.sleep(0.05)
}
hist(lst, main = "Distribuição Normal")
par(new = T)
plot(density(lst), main = "", xlab = "", ylab = "", axes = F)
shapiro.test(m)
# Rodar com ctrl + shift + enter
hist(x, main = "")
# Rodar com ctrl + shift + enter
hist(m, main = "")
par(new = TRUE)
plot(density(x), ylab = "", xlab = "", axes = F, lwd = 2.5)
# Rodar com ctrl + shift + enter
hist(m, main = "")
par(new = TRUE)
plot(density(m), ylab = "", xlab = "", axes = F, lwd = 2.5)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 6, replace = T)
mean(x)
x = sample(1:6, 10000, replace = T)
mean(x)
x = sample(1:6, 10000, replace = T)
mean(x)
x = sample(1:6, 10000, replace = T)
mean(x)
x = sample(1:6, 10000, replace = T)
mean(x)
x = sample(1:6, 10000, replace = T)
mean(x)
x = sample(1:6, 10000, replace = T)
mean(x)
setwd("~/Estudos/Formação Cientista de Dados com Python e R (Udemy)/Seção 18 - Prática em R - Estatística II")
pt(1.5, 8)
pt(1.5, 8, lower.tail = FALSE)
# ou
1 - pt(1.5, 8)
pt(1.5, 8) + pt(1.5, 8, lower.tail = F)
# x = eventos, p = probabilidade, size = eventos
dbinom(3, 5, 0.5)
pbinom(q = 4, size = 4, prob = 0.25)
dbinom(x = 7, size = 12, prob = 0.25)
# outra maneira
dbinom(x = 3, size = 4, prob = 0.25) + dbinom(x = 4, size = 4, prob = 0.25)
pbinom(q = 2, size = 4, prob = 0.25, lower.tail = FALSE)  # similar à distribuição normal
# outra maneira
1 - pbinom(q = 2, size = 4, prob = 0.25)
dpois(3, lambda = 2)
ppois(3, lambda = 2)
# outra maneira
dpois(0, lambda = 2) + dpois(1, lambda = 2) + dpois(2, lambda = 2)
ppois(2, lambda = 2)
ppois(3, lambda = 2, lower.tail = FALSE)
# outra maneira
1 - ppois(2, lambda = 2)
ppois(3, lambda = 2, lower.tail = FALSE)
# outra maneira
1 - ppois(3, lambda = 2)
novela = matrix(c(19, 6, 43, 32), nrow = 2, byrow = T)
rownames(novela) = c("Masculino", "Feminino")
colnames(novela) = c("Assiste", "Não Assiste")
novela
chisq.test(novela)
novela = matrix(c(22, 3, 43, 32), nrow = 2, byrow = T)
rownames(novela) = c("Masculino", "Feminino")
colnames(novela) = c("Assiste", "Não Assiste")
novela
chisq.test(novela)
tratamento = read.csv("anova.csv", sep = ";")
tratamento
boxplot(tratamento$Horas ~ tratamento$Remedio)
an = aov(Horas ~ Remedio, data = tratamento)
summary(an)
an = aov(Horas ~ Remedio * Sexo, data = tratamento)
summary(an)
tukey = TukeyHSD(an)
tukey
plot(tukey)
