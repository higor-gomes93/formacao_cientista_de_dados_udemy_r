Ana = 8L
Paulo = 12L
if (Ana > Paulo){
print("A menina é mais velha")
} else {
print("O menino é mais velho")
}
class(BOD)
14%%3
vetor = c(1:10)
vetor = c(1:10)
for (i in vetor){
if (i%%2 == 0){
print(i)
}
}
print(tail(women, n = 10))
women
Ana = 8L
Paulo = 12L
if (Ana > Paulo){
print("A menina é mais velha")
} else {
print("O menino é mais velho")
}
Ana = 8L
Paulo = 12L
if (Ana > Paulo){
print("A menina é mais velha")
} else {
print("O menino é mais velho")
}
Ana = 8L
Paulo = 12L
if (Ana > Paulo){
print("A menina é mais velha")
} else {
print("O menino é mais velho")
}
print(tail(women, n = 10))
plot(iris$Sepal.Width[50:100, ], iris$Petal.Length[50:100, ])
plot(iris$Sepal.Width[c(50:100), ], iris$Petal.Length[c(50:100), ])
plot(c(iris$Sepal.Width[c(50:100), ], iris$Petal.Length[c(50:100), ])
plot(c(iris$Sepal.Width[c(50:100), ], iris$Petal.Length[c(50:100), ]))
novairis = iris(50:100, c(2, 3))
novairis = iris[50:100, c(2, 3)]
plot(novairis)
vetor_soma = c()
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
append(vetor_soma, vetor_1[i]+vetor_2[i])
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(i)
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
append(vetor_soma, vetor_1[i], after = length(vetor_soma))
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_1[i]
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_1[i]
}
vetor_1[2]
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i])
}
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
append(vetor_soma, 1, after = length(vetor_soma))
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
append(vetor_soma, 1, after = length(vetor_soma))
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
vetor_soma
for (i in c(1:5)){
print(vetor_1[i]+vetor_2[i])
}
vetor_soma = append(vetor_soma, 1, after = length(vetor_soma))
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_soma = append(vetor_soma, vetor_1[i]+vetor_2[i], after = length(vetor_soma))
}
vetor_soma
vetor_1 = c(1, 3, 5, 7, 9)
vetor_2 = c(2, 4, 6, 8, 10)
vetor_soma = c()
for (i in c(1:5)){
vetor_soma = append(vetor_soma, vetor_1[i]+vetor_2[i], after = length(vetor_soma))
}
vetor_soma
#ou
vetor_soma = vetor_1 + vetor_2
co2
nrow(CO2)
ncol(CO2)
rownames(CO2)
colnames(CO2)
nrow(CO2)
ncol(CO2)
rownames(CO2)
colnames(CO2)
# agegp: idade; alcgp: álcool; tobgp: tabaco
esoph
library(lattice)
dotplot(esoph$alcgp ~ esoph$ncontrols, data = esoph)
dotplot(esoph$alcgp ~ esoph$ncontrols | esoph$tobgp)
dotplot(esoph$alcgp ~ esoph$ncontrols)
dotplot(esoph$alcgp ~ esoph$ncontrols, data = esoph)
dotplot(esoph$alcgp ~ esoph$ncontrols | esoph$tobgp)
splom(~CO2[4:5] | CO2$Type, CO2)
densityplot(~CO2$conc | CO2$Treatment, plot.points = FALSE)
densityplot(CO2$conc)
densityplot(~CO2$conc | CO2$Treatment)
# Spray para repelir abelhas
OrchardSprays
# Spray para repelir abelhas
type(OrchardSprays)
# Spray para repelir abelhas
typeof(OrchardSprays)
# Spray para repelir abelhas
class(OrchardSprays)
cloud(decrease ~ rowpos * colpos, data = OrchardSprays)
cloud(decrease ~ rowpos * colpos, groups = treatment, data = OrchardSprays)
# Circunferência, largura e volume de árvores
trees
levelplot(Girth ~ Height * Volume, data = trees)
setwd("~/Estudos/Formação Cientista de Dados com Python e R (Udemy)/Seção 12 - Prática em R - Gráficos, Visualizações e Dashboards")
setwd("~/Estudos/Formação Cientista de Dados com Python e R (Udemy)/Seção 12 - Prática em R - Gráficos, Visualizações e Dashboards")
dados = read.csv("dados.csv", sep = ";", na.strings = "", stringsAsFactors = TRUE)
dados
head(dados)
summary(dados)
summary(dados$PIB)
summary(dados$VALOREMPENHO)
install.packages("RColorBrewer")
library(RColorBrewer)
# Boxplot
boxplot(dados$VALOREMPENHO, main="Valores de Empenho", col = brewer.pal(n = 3, name = "Paired"), outline = F )
boxplot(dados$PIB ,main = "Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"), outline = F)
# Histograma
hist(dados$VALOREMPENHO, main = "Valores de Empenho", col = brewer.pal(n = 3, name = "Paired"))
hist(dados$PIB, main = "Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"), outline = F)
hist(dados$PIB, main = "Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"))
# Histograma
hist(dados$VALOREMPENHO, main = "Valores de Empenho", col = brewer.pal(n = 3, name = "Paired"))
hist(dados$PIB, main = "Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"))
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(dados$VALOREMPENHO), ], 10)
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.5, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.7, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright",legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.8, ncol = 2,lwd=4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 5)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright", legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright", legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright", legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright", legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
maior_empenho
maior_empenho_2 = head(dados[order(dados$VALOREMPENHO), ], 10)
maior_empenho_2
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
maior_empenho
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
maior_empenho
maior_empenho_2 = head(dados[order(dados$VALOREMPENHO), ], 10)
maior_empenho_2
dados = read.csv("dados.csv", sep = ";", na.strings = "", stringsAsFactors = TRUE)
dados
head(dados)
summary(dados)
summary(dados$PIB)
summary(dados$VALOREMPENHO)
install.packages("RColorBrewer")
library(RColorBrewer)
# Boxplot
boxplot(dados$VALOREMPENHO, main = "Valores de Empenho", col = brewer.pal(n = 3, name = "Paired"), outline = F)
boxplot(dados$PIB ,main = "Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"), outline = F)
# Histograma
hist(dados$VALOREMPENHO, main = "Valores de Empenho", col = brewer.pal(n = 3, name = "Paired"))
hist(dados$PIB, main = "Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"))
# Executar com ctrl + shif + enter
maior_empenho = head(dados[order(-dados$VALOREMPENHO), ], 10)
barplot(maior_empenho$VALOREMPENHO, col = brewer.pal(n = 10, name = "RdBu"), las = 2, main = "Maiores Empenhos")
legend("topright", legend = maior_empenho$MUNICIPIO, col = brewer.pal(n = 10, name = "RdBu"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
# Executar com ctrl + shif + enter
maior_pib = head(dados[order(-dados$PIB), ], 10)
barplot(maior_pib$PIB, col = brewer.pal(n = 10, name = "Spectral"), las = 2, main = "Maiores PIBS")
legend("topright",legend=maior_pib$MUNICIPIO,col = brewer.pal(n = 10, name = "Spectral"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
# Calcula qual % de PIB foi empenhado
dados$PROPORCAO = dados$VALOREMPENHO / dados$PIB
maior_prop = head(dados[order(-dados$PROPORCAO), ], 10)
barplot(maior_prop$PROPORCAO, col=brewer.pal(n = 10, name = "Set2"), las = 2, main = "Maiores Gastos em Proporção ao PIB")
legend("topright", legend = maior_prop$MUNICIPIO, col = brewer.pal(n = 10, name = "Set2"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
maior_prop = head(dados[order(-dados$PROPORCAO), ], 8)
# Calcula qual % de PIB foi empenhado
dados$PROPORCAO = dados$VALOREMPENHO / dados$PIB
maior_prop = head(dados[order(-dados$PROPORCAO), ], 8)
barplot(maior_prop$PROPORCAO, col=brewer.pal(n = 10, name = "Set2"), las = 2, main = "Maiores Gastos em Proporção ao PIB")
legend("topright", legend = maior_prop$MUNICIPIO, col = brewer.pal(n = 10, name = "Set2"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
# Calcula qual % de PIB foi empenhado
dados$PROPORCAO = dados$VALOREMPENHO / dados$PIB
maior_prop = head(dados[order(-dados$PROPORCAO), ], 8)
barplot(maior_prop$PROPORCAO, col=brewer.pal(n = 8, name = "Set2"), las = 2, main = "Maiores Gastos em Proporção ao PIB")
legend("topright", legend = maior_prop$MUNICIPIO, col = brewer.pal(n = 8, name = "Set2"), lty = 1:2, cex = 0.8, ncol = 2, lwd = 4)
box()
q()
